# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: '3.7'

volumes:
  volume:

networks:
  test:
    external: true
    name: fabric_test

services:
  peer:
    container_name: ${PEER_NAME}
    image: hyperledger/fabric-peer:latest
    labels:
      service: hyperledger-fabric
      com.trustdble.fabric-network: test-network
      com.trustdble.channel: ${NETWORK_NAME}
    environment:
      #- FABRIC_CFG_PATH=/etc/hyperledger/fabric
      - FABRIC_LOGGING_SPEC=INFO
      - FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=false
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Peer specific variables
      - "CORE_PEER_ID=${PEER_NAME}"
      - "CORE_PEER_ADDRESS=${PEER_NAME}:${PEER_PORT}"
      - "CORE_PEER_LISTENADDRESS=0.0.0.0:${PEER_PORT}"
      - "CORE_PEER_CHAINCODEADDRESS=${PEER_NAME}:7052"
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - "CORE_PEER_GOSSIP_BOOTSTRAP=${PEER_NAME}:${PEER_PORT}"
      - "CORE_PEER_GOSSIP_EXTERNALENDPOINT=${PEER_NAME}:${PEER_PORT}"
      - "CORE_PEER_LOCALMSPID=${LOCALMSPID}"
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - "CORE_OPERATIONS_LISTENADDRESS=${PEER_NAME}:${OPERATIONS_PORT}"
      - CORE_METRICS_PROVIDER=prometheus
      - "CHAINCODE_AS_A_SERVICE_BUILDER_CONFIG={\"peername\":\"${PEER_NAME}${ORG_NAME}\"}"
      - CORE_CHAINCODE_EXECUTETIMEOUT=300s
      #Generic peer variables
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=fabric_test
    volumes:
      - "${TESTNETWORK_PATH}/organizations/peerOrganizations/${ORG_FULLNAME}/peers/${PEER_NAME}/msp/:/etc/hyperledger/fabric/msp/"
      - "${TESTNETWORK_PATH}/organizations/peerOrganizations/${ORG_FULLNAME}/peers/${PEER_NAME}/tls/:/etc/hyperledger/fabric/tls/"
      - volume:/var/hyperledger/production
      - ${DOCKER_SOCK}:/host/var/run/docker.sock
    working_dir: /root
    command: peer node start
    ports:
      - "${PEER_PORT}:${PEER_PORT}"
      - "${OPERATIONS_PORT}:${OPERATIONS_PORT}"
    networks:
      - test
