# Python3 manifest example

loader.entrypoint = "file:{{ gramine.libos }}"
libos.entrypoint = "{{ entrypoint }}"

loader.log_level = "{{ log_level }}"

loader.env.LD_LIBRARY_PATH = "{{ python.stdlib }}/lib:/lib:{{ arch_libdir }}:/usr/lib:/usr/{{ arch_libdir }}"

loader.insecure__use_cmdline_argv = true
loader.pal_internal_mem_size = "64M"
sys.enable_sigterm_injection = true

fs.mounts = [
  { path = "/lib", uri = "file:{{ gramine.runtimedir() }}" },
  { path = "{{ arch_libdir }}", uri = "file:{{ arch_libdir }}" },
  { path = "/usr", uri = "file:/usr" },
  { path = "{{ python.stdlib }}", uri = "file:{{ python.stdlib }}" },
  { path = "{{ python.distlib }}", uri = "file:{{ python.distlib }}" },
  { path = "/etc", uri = "file:/etc" },

  { type = "tmpfs", path = "/tmp" },
]

sys.stack.size = "2M"
sys.enable_extra_runtime_domain_names_conf = true

sgx.debug = false
sgx.nonpie_binary = true
sgx.enclave_size = "512M"
sgx.max_threads = 32

sgx.remote_attestation = "{{ ra_type }}"
sgx.ra_client_spid = "{{ ra_client_spid }}"
sgx.ra_client_linkable = {{ 'true' if ra_client_linkable == '1' else 'false' }}

sgx.trusted_files = [
  "file:{{ gramine.libos }}",
  "file:{{ entrypoint }}",
  "file:{{ gramine.runtimedir() }}/",
  "file:{{ arch_libdir }}/",
  "file:/usr/{{ arch_libdir }}/",
  "file:{{ python.stdlib }}/",
  "file:{{ python.distlib }}/",
  "file:/usr/local/lib/python3.8/dist-packages/grpc/",
  "file:/usr/local/lib/python3.8/dist-packages/grpc_tools/",
  "file:/usr/local/lib/python3.8/dist-packages/google/protobuf/",
  "file:/etc/mime.types",
  "file:/etc/default/apport",
  "file:server.py",
  "file:datacontract_pb2.py",
  "file:datacontract_pb2_grpc.py",
  "file:/usr/local/lib/python3.8/dist-packages/google/__init__.py/",
  "file:/usr/lib/python3/dist-packages/mysql/",
  "file:read_logic.py",
  "file:/etc/lsb-release",
  "file:trustdble_ca.crt"
]
sgx.allowed_files = [
  "file:/etc/nsswitch.conf",
  "file:/etc/ethers",
  "file:/etc/hosts",
  "file:/etc/group",
  "file:/etc/passwd",
  "file:/etc/gai.conf",
  "file:server_cert.pem",
  "file:DataContractLogic.py",
  "file:server_key.pem",
]
